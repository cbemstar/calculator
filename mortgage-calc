<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Enhanced Mortgage Calculator with Amortization Schedule and Pie Chart</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        .calc-container {
            max-width: 600px;
            margin: auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        .calc-input {
            width: 100%;
            padding: 10px;
            margin: 5px 0 15px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        .calc-button {
            background-color: #28a745;
            color: white;
            border: none;
            padding: 10px;
            width: 100%;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }
        .calc-button:hover {
            background-color: #218838;
        }
        .calc-result {
            margin-top: 20px;
            font-weight: bold;
        }
        .amortization-schedule {
            margin-top: 20px;
            border-collapse: collapse;
            width: 100%;
        }
        .amortization-schedule th, .amortization-schedule td {
            border: 1px solid #ddd;
            padding: 8px;
        }
        .amortization-schedule th {
            background-color: #f2f2f2;
            text-align: center;
        }
        .calc-container h1 {
            font-size: 2.5em;
        }
    </style>
</head>
<body>
    <div class="calc-container">
        <h1>Mortgage Calculator</h1>
        <form id="mortgageCalcForm" onsubmit="calculateMortgage(event)">
            <label for="homePrice">Home Price:</label>
            <input type="text" id="homePrice" class="calc-input" required oninput="formatNumber(this)">
            <label for="downPayment">Down Payment:</label>
            <input type="text" id="downPayment" class="calc-input" required oninput="formatNumber(this)">
            <label for="loanAmount">Loan Amount:</label>
            <input type="text" id="loanAmount" class="calc-input" required oninput="formatNumber(this)">
            <label for="interestRate">Interest Rate (%):</label>
            <input type="text" id="interestRate" class="calc-input" required>
            <label for="loanTerm">Loan Term (years):</label>
            <input type="text" id="loanTerm" class="calc-input" required>
            <label for="startDate">Start Date:</label>
            <input type="month" id="startDate" class="calc-input" required>
            <label for="propertyTax">Property Tax (annual):</label>
            <input type="text" id="propertyTax" class="calc-input" required oninput="formatNumber(this)">
            <label for="propertyInsurance">Property Insurance (annual):</label>
            <input type="text" id="propertyInsurance" class="calc-input" required oninput="formatNumber(this)">
            <label for="extraMonthlyPayments">Extra Monthly Payments:</label>
            <input type="text" id="extraMonthlyPayments" class="calc-input" required oninput="formatNumber(this)">
            <label for="monthlyIncome">Monthly Income:</label>
            <input type="text" id="monthlyIncome" class="calc-input" required oninput="formatNumber(this)">
            <button type="submit" class="calc-button">Calculate</button>
        </form>
        <div class="calc-result" id="result">
            Monthly Payment: $<span id="monthlyPayment"></span><br>
            Affordability Ratio: <span id="affordabilityRatio"></span>%
        </div>
        <canvas id="mortgagePieChart" width="400" height="400"></canvas>
        <table class="amortization-schedule" id="amortizationSchedule">
            <thead>
                <tr>
                    <th>Month</th>
                    <th>Principal</th>
                    <th>Interest</th>
                    <th>Total Payment</th>
                    <th>Balance</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>

    <script>
        function formatNumber(input) {
            const value = input.value.replace(/\D/g, '');
            input.value = Number(value).toLocaleString();
        }

        function calculateMortgage(event) {
            event.preventDefault();

            const homePrice = parseFloat(document.getElementById('homePrice').value.replace(/,/g, ''));
            const downPayment = parseFloat(document.getElementById('downPayment').value.replace(/,/g, ''));
            const loanAmount = parseFloat(document.getElementById('loanAmount').value.replace(/,/g, ''));
            const interestRate = parseFloat(document.getElementById('interestRate').value) / 100 / 12;
            const loanTerm = parseFloat(document.getElementById('loanTerm').value) * 12;
            const propertyTax = parseFloat(document.getElementById('propertyTax').value.replace(/,/g, '')) / 12;
            const propertyInsurance = parseFloat(document.getElementById('propertyInsurance').value.replace(/,/g, '')) / 12;
            const extraMonthlyPayments = parseFloat(document.getElementById('extraMonthlyPayments').value.replace(/,/g, ''));
            const monthlyIncome = parseFloat(document.getElementById('monthlyIncome').value.replace(/,/g, ''));

            if (isNaN(homePrice) || isNaN(downPayment) || isNaN(loanAmount) || isNaN(interestRate) || isNaN(loanTerm) || isNaN(propertyTax) || isNaN(propertyInsurance) || isNaN(extraMonthlyPayments) || isNaN(monthlyIncome)) {
                alert("Please fill out all required fields.");
                return;
            }

            const principalAndInterest = (loanAmount * interestRate) / (1 - Math.pow(1 + interestRate, -loanTerm));
            const monthlyPayment = principalAndInterest + propertyTax + propertyInsurance + extraMonthlyPayments;
            const affordabilityRatio = (monthlyPayment / monthlyIncome) * 100;

            document.getElementById('monthlyPayment').textContent = monthlyPayment.toFixed(2);
            document.getElementById('affordabilityRatio').textContent = affordabilityRatio.toFixed(2);

            const schedule = calculateAmortizationSchedule(loanAmount, interestRate, loanTerm, principalAndInterest, propertyTax, propertyInsurance, extraMonthlyPayments);
            displayAmortizationSchedule(schedule);
            displayPieChart(monthlyPayment, propertyTax, propertyInsurance, principalAndInterest);
        }

        function calculateAmortizationSchedule(loanAmount, interestRate, loanTerm, principalAndInterest, propertyTax, propertyInsurance, extraMonthlyPayments) {
            let balance = loanAmount;
            const schedule = [];

            for (let month = 1; month <= loanTerm; month++) {
                const interestPayment = balance * interestRate;
                const principalPayment = principalAndInterest - interestPayment;
                balance -= principalPayment;
                schedule.push({
                    month: month,
                    principal: principalPayment.toFixed(2),
                    interest: interestPayment.toFixed(2),
                    totalPayment: (principalPayment + interestPayment + propertyTax + propertyInsurance + extraMonthlyPayments).toFixed(2),
                    balance: balance.toFixed(2)
                });
            }
            return schedule;
        }

        function displayAmortizationSchedule(schedule) {
            const tbody = document.querySelector('#amortizationSchedule tbody');
            tbody.innerHTML = '';

            schedule.forEach(payment => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${payment.month}</td>
                    <td>${payment.principal}</td>
                    <td>${payment.interest}</td>
                    <td>${payment.totalPayment}</td>
                    <td>${payment.balance}</td>
                `;
                tbody.appendChild(row);
            });
        }

        function displayPieChart(monthlyPayment, propertyTax, propertyInsurance, principalAndInterest) {
            const ctx = document.getElementById('mortgagePieChart').getContext('2d');
            new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: ['Principal & Interest', 'Property Tax', 'Property Insurance', 'Extra Monthly Payments'],
                    datasets: [{
                        data: [principalAndInterest, propertyTax, propertyInsurance, monthlyPayment - (principalAndInterest + propertyTax + propertyInsurance)],
                        backgroundColor: ['#4caf50', '#ffeb3b', '#f44336', '#2196f3']
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'top',
                        },
                    }
                }
            });
        }
    </script>
</body>
</html>
